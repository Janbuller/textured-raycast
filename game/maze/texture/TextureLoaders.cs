using System;
using System.IO;
using System.Linq;

namespace textured_raycast.maze.texture
{
    /// <summary>
    /// "Collection" of texture loaders for different file formats. (currently
    /// only supporting one...)
    /// </summary>
    class TextureLoaders {
        /// <summary>
        /// Creates a texture from a plain ppm. Only known to be working with
        /// one, generated by GIMP using the "ASCII" setting.
        /// </summary>
        public static Texture loadFromPlainPPM(string location) {
            string[] imageData = File.ReadAllLines(location);

            // Check magic number, to see if correct format
            if (imageData[0] != "P3")
                return null;

            // Remove all comments
            imageData = imageData.Where(line => line.Substring(0,1) != "#").ToArray();

            // Get width and height from image
            int width, height;
            string[] sizes = imageData[1].Split(" ");
            width  = Convert.ToInt32(sizes[0]);
            height = Convert.ToInt32(sizes[1]);

            // Get the color max clamp
            int maxColorVal;
            maxColorVal = Convert.ToInt32(imageData[2]);

            TexColor[] pixels = new TexColor[width * height];

            string[] imageDataNew = new string[width*height*3+4];
            int curIdx = 0;
            for(int i = 0; i < imageData.Count(); i++) {
                string[] splitLine = imageData[i].Split(" ");
                for(int j = 0; j < splitLine.Count(); j++) {
                    if(splitLine[j] == "")
                        continue;
                    imageDataNew[curIdx] = splitLine[j];
                    curIdx++;
                }
            }

            // Load all the pixels.
            for(int i = 4; i < imageDataNew.Length; i += 3) {
                int[] colors = new int[3];
                for(int j = 0; j < 3; j++) {
                    colors[j] = Convert.ToInt32(imageDataNew[i+j]);
                    colors[j] = Convert.ToInt32(imageDataNew[i+j]);
                    colors[j] = Convert.ToInt32(imageDataNew[i+j]);

                }
                TexColor color = new TexColor(colors[0], colors[1], colors[2], maxColorVal);

                pixels[(i-3)/3] = color;
            }

            return new Texture(pixels.ToList(), width, height);
        }
    }
}
